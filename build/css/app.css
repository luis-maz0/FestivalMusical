/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:rgba(0,0,0,0)}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html{font-size:62.5%;box-sizing:border-box;scroll-padding-top:0rem}*,*:before,*:after{box-sizing:inherit}body{font-family:"Montserrat",sans-serif;font-optical-sizing:auto;font-style:normal;color:#000;font-size:2rem}body.overflow-hidden{overflow:hidden}p{color:#000;line-height:1.5}.contenedor{width:95%;max-width:120rem;margin:0 auto}a{text-decoration:none}h1,h2,h3{margin:0 0 5rem 0;font-weight:900}h1{font-size:4rem}h2{font-size:4.6rem}h3{font-size:6rem;text-align:center}img{max-width:100%;width:100%;height:auto;display:block}body>section{padding:10rem 0}.header{background-color:#0a8967}@media(min-width: 768px){.header.fixed{position:fixed;top:0;left:0;width:100%}}.header .contenido-header{padding:2rem}@media(min-width: 768px){.header .contenido-header{display:flex;justify-content:space-between;align-items:center;gap:2rem}}.header h1{color:#fff;text-align:center;margin:0 0 2rem 0}@media(min-width: 768px){.header h1{text-align:left;margin:0}}.header .nav-principal{display:flex;flex-direction:column;align-items:center;gap:2rem}@media(min-width: 768px){.header .nav-principal{flex-direction:row}}.header .nav-principal a{color:#fff;font-size:2rem}.header .nav-principal a:hover,.header .nav-principal a.active{color:#07f9a2}.video{height:100vh;position:relative}.video video{display:block;width:100%;height:100%;object-fit:cover}.video .overlay{position:absolute;inset:0;background:linear-gradient(270deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.6));display:flex;align-items:center}.video .contenido-video{z-index:10}.video .contenido-video h2{color:#fff;font-size:3rem;margin:0}.video .contenido-video p{display:inline-block;background-color:#09c184;padding:1rem 2rem;margin-top:1.5rem}.sobre-festival{width:95%;max-width:120rem;margin:0 auto}.sobre-festival .imagen{height:100%}.sobre-festival .imagen img{height:100%;object-fit:cover}.sobre-festival .contenido-festival{margin-top:5rem}.sobre-festival .contenido-festival h2{margin:0}@media(min-width: 768px){.sobre-festival{display:grid;grid-template-columns:1fr 2fr;align-items:center;gap:5rem}.sobre-festival .contenido-festival{margin-top:0}}@media(min-width: 1200px){.sobre-festival{display:grid;grid-template-columns:repeat(2, 1fr);gap:5rem}}.lineup{background-color:#0c5149}.lineup h3,.lineup .dia{color:#fff;text-align:center;text-transform:uppercase}.lineup .dia{font-size:2.75rem}.escenarios-contenedor{width:95%;max-width:120rem;margin:0 auto}@media(min-width: 768px){.escenarios-contenedor{display:grid;grid-template-columns:repeat(2, 1fr);gap:5rem}}.escenario{margin-top:2rem;padding-top:1rem}.escenario .nombre-escenario{text-align:center;font-weight:900;text-transform:uppercase;text-align:center}.calendario{margin:0;padding:0;list-style:none}.calendario li{padding:1.5rem}.calendario li .hora,.calendario li .artista{display:inline-block}.calendario li .hora{margin-right:4rem;font-weight:700;width:1rem}.calendario li .artista{font-weight:400}.calendario li .artista::before{display:inline;content:"|";padding:0 2rem}.calendario li:nth-child(odd){background-color:#08a973}.bg-1,.bg-2{background-color:#09c184}.galeria{padding-bottom:0;width:95%;max-width:120rem;margin:0 auto}.galeria-titulo{text-transform:uppercase}@media(min-width: 768px){.galeria-imgs{display:grid;grid-template-columns:repeat(2, 1fr);gap:5rem}}@media(min-width: 1200px){.galeria-imgs{display:grid;grid-template-columns:repeat(3, 1fr);gap:5rem}}.galeria-img{border-radius:1rem;display:block;height:50rem;object-fit:cover;margin-bottom:3rem}.modal{display:flex;flex-direction:column;justify-content:center;align-items:center;position:fixed;gap:5rem;inset:0;background-color:rgba(0,0,0,.7);animation:fadeIn ease-in .7s}.modal-img{width:80rem;height:80rem;max-width:70vw;max-height:70vh;object-fit:cover}.modal-fadeOut{animation:fadeOut ease-in .7s}.btn-cerrar{width:5rem;height:5rem;border-radius:50%}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.contenedor-tickets h3{text-transform:uppercase}.tickets{width:95%;max-width:120rem;margin:0 auto}@media(min-width: 768px){.tickets{display:grid;grid-template-columns:repeat(2, 1fr);gap:5rem}}.ticket{color:#fff;background-color:#0c5149;padding:2rem 0;margin-bottom:2rem}.ticket-nombre{color:#fff;font-size:3rem;font-weight:900;text-align:center;text-transform:uppercase;margin:0;margin-bottom:2rem}.ticket-header,.ticket-footer{padding:.5rem}.ticket-header p,.ticket-footer p{text-align:center;margin:0}.ticket-header{background-color:#09c184}.ticket-header p{text-transform:uppercase;font-size:2.2rem;padding:1rem 0;color:#fff}.ticket-body ul{margin:0;padding:0;list-style:none}.ticket-body li{padding:2rem 3.5rem;border-bottom:1px solid #0a8967}.ticket-body li:last-child{margin-bottom:2rem}.ticket-footer p{font-size:2rem;font-weight:900;background-color:#09c184;color:#fff;padding:1rem 0;border-radius:1rem;width:40%;margin:0 auto;cursor:pointer}.ticket-footer p:hover{background-color:#0a8967}@media(min-width: 768px){.ticket{display:flex;flex-direction:column}.ticket-footer{margin-top:auto}}.footer{margin-top:10rem;padding:2rem 0;background-color:#0c5149;text-align:center;color:#fff;text-transform:uppercase}/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJiYXNlL19ub3JtYWxpemUuc2NzcyIsImJhc2UvX2dsb2JhbGVzLnNjc3MiLCJiYXNlL192YXJpYWJsZXMuc2NzcyIsImxheW91dC9faGVhZGVyLnNjc3MiLCJiYXNlL19taXhpbnMuc2NzcyIsImxheW91dC9fdmlkZW8uc2NzcyIsImxheW91dC9fZmVzdGl2YWwuc2NzcyIsImxheW91dC9fbGluZXVwLnNjc3MiLCJsYXlvdXQvX2dhbGVyaWEuc2NzcyIsImxheW91dC9fdGlja2V0cy5zY3NzIiwibGF5b3V0L19mb290ZXIuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0RUFVQyxLQUNHLGlCQUNBLDhCQVVGLEtBQ0UsU0FPRixLQUNFLGNBUUYsR0FDRSxjQUNBLGVBV0YsR0FDRSx1QkFDQSxTQUNBLGlCQVFGLElBQ0UsZ0NBQ0EsY0FVRixFQUNFLCtCQVFGLFlBQ0UsbUJBQ0EsMEJBQ0EsaUNBT0YsU0FFRSxtQkFRRixjQUdFLGdDQUNBLGNBT0YsTUFDRSxjQVFGLFFBRUUsY0FDQSxjQUNBLGtCQUNBLHdCQUdGLElBQ0UsZUFHRixJQUNFLFdBVUYsSUFDRSxrQkFXRixzQ0FLRSxvQkFDQSxlQUNBLGlCQUNBLFNBUUYsYUFFRSxpQkFRRixjQUVFLG9CQU9GLGdEQUlFLDBCQU9GLHdIQUlFLGtCQUNBLFVBT0YsNEdBSUUsOEJBT0YsU0FDRSwyQkFVRixPQUNFLHNCQUNBLGNBQ0EsY0FDQSxlQUNBLFVBQ0EsbUJBT0YsU0FDRSx3QkFPRixTQUNFLGNBUUYsNkJBRUUsc0JBQ0EsVUFPRixrRkFFRSxZQVFGLGNBQ0UsNkJBQ0Esb0JBT0YseUNBQ0Usd0JBUUYsNkJBQ0UsMEJBQ0EsYUFVRixRQUNFLGNBT0YsUUFDRSxrQkFVRixTQUNFLGFBT0YsU0FDRSxhQ3pWSixLQUNJLGdCQUNBLHNCQUNBLHdCQUVKLG1CQUdJLG1CQUVKLEtBQ0ksWUNaZSx3QkRhZix5QkFDQSxrQkFDQSxNQ1RJLEtEVUosZUFDQSxxQkFDSSxnQkFHUixFQUNJLE1DaEJJLEtEaUJKLGdCQUVKLFlBQ0ksVUFDQSxpQkFDQSxjQUVKLEVBQ0kscUJBRUosU0FDSSxrQkFDQSxnQkFFSixHQUNJLGVBRUosR0FDSSxpQkFFSixHQUNJLGVBQ0Esa0JBRUosSUFDSSxlQUNBLFdBQ0EsWUFDQSxjQUdKLGFBQ0ksZ0JFdERKLFFBQ0ksaUJEQ00sUUVvQk4seUJEbEJJLGNBQ0ksZUFDQSxNQUNBLE9BQ0EsWUFJUiwwQkFDSSxhQ1NKLHlCRFZBLDBCQUdRLGFBQ0EsOEJBQ0EsbUJBQ0EsVUFHUixXQUNJLE1EaEJDLEtDaUJELGtCQUNBLGtCQ0ZKLHlCRERBLFdBS1EsZ0JBQ0EsVUFHUix1QkFDSSxhQUNBLHNCQUNBLG1CQUNBLFNDWkoseUJEUUEsdUJBTVEsb0JBRUoseUJBQ0ksTURqQ0gsS0NrQ0csZUFDQSwrREFFSSxNRDNDTixlR0NOLGFBUUEsa0JBTkEsYUFDSSxjQUNBLFdBQ0EsWUFDQSxpQkFHSixnQkFDSSxrQkFDQSxRQUNBLDJFQU1KLGFBQ0EsbUJBRUEsd0JBRUksV0FDQSwyQkFDSSxNSHBCSCxLR3FCRyxlQUNBLFNBRUosMEJBQ0kscUJBQ0EsaUJIL0JGLFFHZ0NFLGtCQUNBLGtCQ2pDWixnQkZXSSxVQUNBLGlCQUNBLGNFWkEsd0JBQ0ksWUFDQSw0QkFDSSxZQUNBLGlCQUdSLG9DQUNJLGdCQUNBLHVDQUNJLFNGVVIseUJFckJKLGdCQWdCUSxhQUNBLDhCQUNBLG1CQUNBLFNBQ0Esb0NBQ0ksY0ZLUiwwQkUxQkosZ0JGTUksYUFDQSxxQ0FDQSxJQUg2QixNR0xqQyxRQUNJLGlCTENNLGdDS0NGLE1MRUMsS0tERCxrQkFDQSx5QkFFSixhQUNJLGtCQUdSLGlDSENJLGlCQUNBLGNBUUEseUJHVkosdUJITEksYUFDQSxxQ0FDQSxJQUg2QixNR1lqQyxXQUNJLGdCQUNBLGlCQUNBLDZCQUNJLGtCQUNBLGdCQUNBLHlCQUNBLGtCQUdSLFlIM0JJLFNBQ0EsVUFDQSxnQkcyQkEsZUFDSSxlQUNBLDZDQUNJLHFCQUVKLHFCQUNJLGtCQUNBLGdCQUNBLFdBRUosd0JBQ0ksZ0JBRUosZ0NBQ0ksZUFDQSxZQUNBLGVBR1IsOEJBQ0EseUJBR0osWUFDSyxpQkxyREssaUJNQ04saUJKVUEsVUFDQSxpQkFDQSxjSVhBLGdCQUNJLHlCSmtCSix5QklmQSwyQkpDQSxxQ0FDQSxJQUg2QixNQXFCN0IsMEJJcEJBLDJCSkNBLHFDQUNBLElBSDZCLE1JUzdCLGFBQ0ksbUJBQ0EsY0FDQSxhQUNBLGlCQUNBLG1CQUdSLE9BQ0ksYUFDQSxzQkFDQSx1QkFDQSxtQkFDQSxlQUNBLFNBQ0EsUUFDQSxnQ0FHQSw2QkFFQSxXQUNJLFlBQ0EsYUFDQSxlQUNBLGdCQUNBLGlCQUVKLGVBQ0ksOEJBR1IsWUFDSSxXQUNBLFlBQ0Esa0JBSUosa0JBQ0ksR0FDSSxVQUVKLEtBQ0ksV0FHUixtQkFDSSxHQUNJLFVBRUosS0FDSSxXQ2pFSix1QkFDSSx5QkFHUixTTE1JLFVBQ0EsaUJBQ0EsY0FRQSx5QktoQkosU0xDSSxhQUNBLHFDQUNBLElBSDZCLE1LTWpDLFFBQ0ksV0FDQSxpQlBYTSxRT1lOLGVBQ0EsbUJBQ0EsZUFDSSxXQUNBLGVBQ0EsZ0JBQ0Esa0JBQ0EseUJBQ0EsU0FDQSxtQkFFSiw4QkFFSSxjQUNBLGtDQUNJLGtCQUNBLFNBR1IsZUFDSSxpQlBsQ0UsUU9tQ0YsaUJBQ0kseUJBQ0EsaUJBQ0EsZUFDQSxNUGxDSCxLT3NDRCxnQkwzQ0osU0FDQSxVQUNBLGdCSzRDSSxnQkFDSSxvQkFDQSxnQ0FDQSwyQkFDSSxtQkFLUixpQkFDSSxlQUNBLGdCQUNBLGlCUDFERixRTzJERSxNUHRESCxLT3VERyxlQUNBLG1CQUNBLFVBQ0EsY0FDQSxlQUVBLHVCQUNJLGlCUGxFTixRRW9CTix5QktWSixRQTZEUSxhQUNBLHNCQUNBLGVBQ0ksaUJDNUVaLFFBQ0ksaUJBQ0EsZUFDQSx5QkFDQSxrQkFDQSxNUkNLIiwiZmlsZSI6ImFwcC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXHJcblxyXG4vKiBEb2N1bWVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cclxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXHJcbiAqL1xyXG5cclxuIGh0bWwge1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cclxuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xyXG4gIH1cclxuICBcclxuICAvKiBTZWN0aW9uc1xyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbiAgXHJcbiAgLyoqXHJcbiAgICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xyXG4gIFxyXG4gIGJvZHkge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cclxuICAgKi9cclxuICBcclxuICBtYWluIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXHJcbiAgICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cclxuICAgKi9cclxuICBcclxuICBoMSB7XHJcbiAgICBmb250LXNpemU6IDJlbTtcclxuICAgIG1hcmdpbjogMC42N2VtIDA7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIEdyb3VwaW5nIGNvbnRlbnRcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4gIFxyXG4gIC8qKlxyXG4gICAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXHJcbiAgICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXHJcbiAgICovXHJcbiAgXHJcbiAgaHIge1xyXG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cclxuICAgIGhlaWdodDogMDsgLyogMSAqL1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICAgKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICovXHJcbiAgXHJcbiAgcHJlIHtcclxuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xyXG4gICAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cclxuICB9XHJcbiAgXHJcbiAgLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4gIFxyXG4gIC8qKlxyXG4gICAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cclxuICAgKi9cclxuICBcclxuICBhIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxyXG4gICAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXHJcbiAgICovXHJcbiAgXHJcbiAgYWJiclt0aXRsZV0ge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gICAqL1xyXG4gIFxyXG4gIGIsXHJcbiAgc3Ryb25nIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xyXG4gIFxyXG4gIGNvZGUsXHJcbiAga2JkLFxyXG4gIHNhbXAge1xyXG4gICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXHJcbiAgICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICAgKi9cclxuICBcclxuICBzbWFsbCB7XHJcbiAgICBmb250LXNpemU6IDgwJTtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXHJcbiAgICogYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xyXG4gIFxyXG4gIHN1YixcclxuICBzdXAge1xyXG4gICAgZm9udC1zaXplOiA3NSU7XHJcbiAgICBsaW5lLWhlaWdodDogMDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxuICB9XHJcbiAgXHJcbiAgc3ViIHtcclxuICAgIGJvdHRvbTogLTAuMjVlbTtcclxuICB9XHJcbiAgXHJcbiAgc3VwIHtcclxuICAgIHRvcDogLTAuNWVtO1xyXG4gIH1cclxuICBcclxuICAvKiBFbWJlZGRlZCBjb250ZW50XHJcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuICBcclxuICAvKipcclxuICAgKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxyXG4gICAqL1xyXG4gIFxyXG4gIGltZyB7XHJcbiAgICBib3JkZXItc3R5bGU6IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIEZvcm1zXHJcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuICBcclxuICAvKipcclxuICAgKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cclxuICAgKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXHJcbiAgICovXHJcbiAgXHJcbiAgYnV0dG9uLFxyXG4gIGlucHV0LFxyXG4gIG9wdGdyb3VwLFxyXG4gIHNlbGVjdCxcclxuICB0ZXh0YXJlYSB7XHJcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xyXG4gICAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXHJcbiAgICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xyXG4gICAgbWFyZ2luOiAwOyAvKiAyICovXHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxyXG4gICAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXHJcbiAgICovXHJcbiAgXHJcbiAgYnV0dG9uLFxyXG4gIGlucHV0IHsgLyogMSAqL1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxyXG4gICAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cclxuICAgKi9cclxuICBcclxuICBidXR0b24sXHJcbiAgc2VsZWN0IHsgLyogMSAqL1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAgICovXHJcbiAgXHJcbiAgYnV0dG9uLFxyXG4gIFt0eXBlPVwiYnV0dG9uXCJdLFxyXG4gIFt0eXBlPVwicmVzZXRcIl0sXHJcbiAgW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAgICovXHJcbiAgXHJcbiAgYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxyXG4gIFt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxyXG4gIFt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXHJcbiAgW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xyXG4gICAgYm9yZGVyLXN0eWxlOiBub25lO1xyXG4gICAgcGFkZGluZzogMDtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxyXG4gICAqL1xyXG4gIFxyXG4gIGJ1dHRvbjotbW96LWZvY3VzcmluZyxcclxuICBbdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcclxuICBbdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxyXG4gIFt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcclxuICAgIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxyXG4gICAqL1xyXG4gIFxyXG4gIGZpZWxkc2V0IHtcclxuICAgIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cclxuICAgKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXHJcbiAgICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxyXG4gICAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xyXG4gIFxyXG4gIGxlZ2VuZCB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXHJcbiAgICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xyXG4gICAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cclxuICAgIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xyXG4gICAgcGFkZGluZzogMDsgLyogMyAqL1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxyXG4gICAqL1xyXG4gIFxyXG4gIHByb2dyZXNzIHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXHJcbiAgICovXHJcbiAgXHJcbiAgdGV4dGFyZWEge1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxyXG4gICAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cclxuICAgKi9cclxuICBcclxuICBbdHlwZT1cImNoZWNrYm94XCJdLFxyXG4gIFt0eXBlPVwicmFkaW9cIl0ge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xyXG4gICAgcGFkZGluZzogMDsgLyogMiAqL1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXHJcbiAgICovXHJcbiAgXHJcbiAgW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXHJcbiAgW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cclxuICAgKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cclxuICAgKi9cclxuICBcclxuICBbdHlwZT1cInNlYXJjaFwiXSB7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xyXG4gICAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxyXG4gICAqL1xyXG4gIFxyXG4gIFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICAgKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAgICovXHJcbiAgXHJcbiAgOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xyXG4gICAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xyXG4gIH1cclxuICBcclxuICAvKiBJbnRlcmFjdGl2ZVxyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbiAgXHJcbiAgLypcclxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxyXG4gICAqL1xyXG4gIFxyXG4gIGRldGFpbHMge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC8qXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xyXG4gIFxyXG4gIHN1bW1hcnkge1xyXG4gICAgZGlzcGxheTogbGlzdC1pdGVtO1xyXG4gIH1cclxuICBcclxuICAvKiBNaXNjXHJcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuICBcclxuICAvKipcclxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXHJcbiAgICovXHJcbiAgXHJcbiAgdGVtcGxhdGUge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXHJcbiAgICovXHJcbiAgXHJcbiAgW2hpZGRlbl0ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9IiwiQHVzZSBcImJhc2UvdmFyaWFibGVzXCIgYXMgdjtcclxuXHJcbmh0bWwge1xyXG4gICAgZm9udC1zaXplOiA2Mi41JTsgLy8xIHJlbSA9IDEwcHhcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBzY3JvbGwtcGFkZGluZy10b3A6IDByZW07XHJcbn1cclxuKiwgXHJcbio6YmVmb3JlLFxyXG4qOmFmdGVyIHtcclxuICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XHJcbn1cclxuYm9keSB7XHJcbiAgICBmb250LWZhbWlseTogdi4kZnVlbnRlX3ByaW5jaXBhbDtcclxuICAgIGZvbnQtb3B0aWNhbC1zaXppbmc6IGF1dG87XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBjb2xvcjogdi4kbmVncm87XHJcbiAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAmLm92ZXJmbG93LWhpZGRlbntcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgfVxyXG59XHJcbnAge1xyXG4gICAgY29sb3I6IHYuJG5lZ3JvO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcclxufVxyXG4uY29udGVuZWRvciB7XHJcbiAgICB3aWR0aDogOTUlO1xyXG4gICAgbWF4LXdpZHRoOiAxMjByZW07XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5hIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5oMSwgaDIsIGgzIHtcclxuICAgIG1hcmdpbjogMCAwIDVyZW0gMDtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbn1cclxuaDEge1xyXG4gICAgZm9udC1zaXplOiA0cmVtO1xyXG59XHJcbmgyIHtcclxuICAgIGZvbnQtc2l6ZTogNC42cmVtO1xyXG59XHJcbmgzIHtcclxuICAgIGZvbnQtc2l6ZTogNnJlbTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5pbWcge1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4vL0VsIHByaW1lciBzZWN0aW9uIGhpam8gZGVsIGJvZHksIHRlbmRyw6EgMTByZW0gYXJyaWJhIHkgYWJham8uIFxyXG5ib2R5ID4gc2VjdGlvbiB7XHJcbiAgICBwYWRkaW5nOiAxMHJlbSAwXHJcbn0iLCIvKlZhcmlhYmxlcywgc29uIHNpbWlsYXJlcyBhIGxhcyBjdXN0b21zIHByb3BlcnRpZXMqL1xyXG4kZnVlbnRlX3ByaW5jaXBhbDogXCJNb250c2VycmF0XCIsIHNhbnMtc2VyaWY7XHJcbiRjb2xvci0xOiAjMDdmOWEyO1xyXG4kY29sb3ItMjogIzA5YzE4NDtcclxuJGNvbG9yLTM6ICMwYTg5Njc7XHJcbiRjb2xvci00OiAjMGM1MTQ5O1xyXG4kY29sb3ItNTogIzBkMTkyYjtcclxuJG5lZ3JvOiAjMDAwO1xyXG4kYmxhbmNvOiAjZmZmOyBcclxuXHJcbi8vTWVkaWEgUXVlcmllc1xyXG4kdGVsZWZvbm86IDQ4MHB4O1xyXG4kdGFibGV0OiA3NjhweDtcclxuJGVzY3JpdG9yaW86IDEyMDBweDtcclxuJGVzY3JpdG9yaW9YTDogMTQwMHB4O1xyXG4iLCJAdXNlIFwiYmFzZS92YXJpYWJsZXNcIiBhcyB2OyBcclxuQHVzZSBcImJhc2UvbWl4aW5zXCIgYXMgbTsgXHJcbi5oZWFkZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2LiRjb2xvci0zIDtcclxuXHJcbiAgICBAaW5jbHVkZSBtLnRhYmxldHtcclxuICAgICAgICAmLmZpeGVke1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5jb250ZW5pZG8taGVhZGVye1xyXG4gICAgICAgIHBhZGRpbmc6IDJyZW07XHJcbiAgICAgICAgQGluY2x1ZGUgbS50YWJsZXR7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgZ2FwOiAycmVtOyAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBoMXtcclxuICAgICAgICBjb2xvcjp2LiRibGFuY287XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbjogMCAwIDJyZW0gMDtcclxuICAgICAgICBAaW5jbHVkZSBtLnRhYmxldHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5uYXYtcHJpbmNpcGFse1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGdhcDogMnJlbTtcclxuICAgICAgICBAaW5jbHVkZSBtLnRhYmxldHtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICB9XHJcbiAgICAgICAgYXtcclxuICAgICAgICAgICAgY29sb3I6IHYuJGJsYW5jbztcclxuICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgICAgICAmOmhvdmVyLFxyXG4gICAgICAgICAgICAmLmFjdGl2ZXtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB2LiRjb2xvci0xO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCJAdXNlIFwidmFyaWFibGVzXCIgYXMgdjsgXHJcblxyXG5AbWl4aW4gcmVzZXQtbGlzdHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG59O1xyXG5cclxuQG1peGluIGdyaWRTaW0oJGNvbHVtbmFzLCAkZ2FwIDogNXJlbSl7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJGNvbHVtbmFzLCAxZnIpO1xyXG4gICAgZ2FwOiAkZ2FwO1xyXG59O1xyXG5AbWl4aW4gY29udGVuZWRvcntcclxuICAgIHdpZHRoOiA5NSU7XHJcbiAgICBtYXgtd2lkdGg6IDEyMHJlbTtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG59O1xyXG5AbWl4aW4gdGVsZWZvbm97XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogdi4kdGVsZWZvbm8pe1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59O1xyXG5AbWl4aW4gdGFibGV0e1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IHYuJHRhYmxldCl7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn07XHJcbkBtaXhpbiBlc2NyaXRvcmlve1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IHYuJGVzY3JpdG9yaW8pe1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59O1xyXG5AbWl4aW4gZXNjcml0b3Jpb1hMe1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IHYuJGVzY3JpdG9yaW9YTCl7XHJcbiAgICAgICAgQGNvbnRlbnRcclxuICAgIH1cclxufTtcclxuIiwiQHVzZSBcIi4uL2Jhc2UvdmFyaWFibGVzXCIgYXMgdjsgXHJcblxyXG4udmlkZW97XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgLy9IQUNFTU9TIFFVRSBFTCBWSURFTyBPQ1VQRSBUT0RPIEVMIEVTUEFDSU8gREVMIFBBRFJFLiBcclxuICAgIHZpZGVve1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgIH1cclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgXHJcbiAgICAub3ZlcmxheXtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgaW5zZXQ6IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCBcclxuICAgICAgICAgICAgMjcwZGVnLFxyXG4gICAgICAgICAgICByZ2JhKCB2LiRuZWdybywgMzAlKSxcclxuICAgICAgICAgICAgcmdiYSggdi4kbmVncm8sIDYwJSlcclxuICAgICAgICApO1xyXG4gICAgLy9BTElORUFNT1MgRUwgQ09OVEVOSURPLiBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgLmNvbnRlbmlkby12aWRlb3tcclxuICAgICAgICAvL1RSQUVNT1MgRUwgQ09OVEVOSURPIERFTCBWSURFTyBBTCBGUkVOVEUuIFxyXG4gICAgICAgIHotaW5kZXg6IDEwO1xyXG4gICAgICAgIGgye1xyXG4gICAgICAgICAgICBjb2xvcjogdi4kYmxhbmNvO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDNyZW07XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcHtcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2LiRjb2xvci0yO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxcmVtIDJyZW07XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEuNXJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJAdXNlIFwiLi4vYmFzZS92YXJpYWJsZXNcIiBhcyB2OyBcclxuQHVzZSBcIi4uL2Jhc2UvbWl4aW5zXCIgYXMgbTsgXHJcblxyXG4uc29icmUtZmVzdGl2YWx7XHJcbiAgICAuaW1hZ2Vue1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBpbWd7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmNvbnRlbmlkby1mZXN0aXZhbHtcclxuICAgICAgICBtYXJnaW4tdG9wOiA1cmVtO1xyXG4gICAgICAgIGgye1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgbS5jb250ZW5lZG9yO1xyXG4gICAgQGluY2x1ZGUgbS50YWJsZXR7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAyZnI7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBnYXA6IDVyZW07XHJcbiAgICAgICAgLmNvbnRlbmlkby1mZXN0aXZhbHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBAaW5jbHVkZSBtLmVzY3JpdG9yaW97XHJcbiAgICAgICAgQGluY2x1ZGUgbS5ncmlkU2ltKDIpXHJcbiAgICB9XHJcbn0iLCJAdXNlIFwiLi4vYmFzZS92YXJpYWJsZXNcIiBhcyB2OyBcclxuQHVzZSBcIi4uL2Jhc2UvbWl4aW5zXCIgYXMgbTsgXHJcblxyXG4ubGluZXVwe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdi4kY29sb3ItNDtcclxuICAgIGgzLCAuZGlhe1xyXG4gICAgICAgIGNvbG9yOiB2LiRibGFuY287IFxyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgfVxyXG4gICAgLmRpYXtcclxuICAgICAgICBmb250LXNpemU6IDIuNzVyZW07XHJcbiAgICB9XHJcbn1cclxuLmVzY2VuYXJpb3MtY29udGVuZWRvcntcclxuICAgIEBpbmNsdWRlIG0uY29udGVuZWRvcjsgXHJcbiAgICBAaW5jbHVkZSBtLnRhYmxldHtcclxuICAgICAgICBAaW5jbHVkZSBtLmdyaWRTaW0oMilcclxuICAgIH1cclxufVxyXG4uZXNjZW5hcmlve1xyXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcclxuICAgIHBhZGRpbmctdG9wOiAxcmVtO1xyXG4gICAgLm5vbWJyZS1lc2NlbmFyaW97XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbn1cclxuLmNhbGVuZGFyaW97XHJcbiAgICBAaW5jbHVkZSBtLnJlc2V0LWxpc3Q7XHJcbiAgICBsaXtcclxuICAgICAgICBwYWRkaW5nOiAxLjVyZW07XHJcbiAgICAgICAgLmhvcmEsIC5hcnRpc3Rhe1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5ob3Jhe1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDRyZW07XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7ICAgIFxyXG4gICAgICAgICAgICB3aWR0aDogMXJlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmFydGlzdGF7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5hcnRpc3RhOjpiZWZvcmV7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTtcclxuICAgICAgICAgICAgY29udGVudDpcInxcIjtcclxuICAgICAgICAgICAgcGFkZGluZzogMCAycmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGxpOm50aC1jaGlsZChvZGQpe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKHYuJGNvbG9yLTIsIDUlKTtcclxuICAgIH1cclxufVxyXG4uYmctMSwgLmJnLTJ7XHJcbiAgICAgYmFja2dyb3VuZC1jb2xvcjp2LiRjb2xvci0yXHJcbn1cclxuXHJcbiIsIkB1c2UgXCIuLi9iYXNlL3ZhcmlhYmxlc1wiIGFzIHY7IFxyXG5AdXNlIFwiLi4vYmFzZS9taXhpbnNcIiBhcyBtOyBcclxuXHJcbi5nYWxlcmlhe1xyXG4gICAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgICAmLXRpdHVsb3tcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlXHJcbiAgICB9XHJcbiAgICBAaW5jbHVkZSBtLmNvbnRlbmVkb3I7IFxyXG4gICAgJi1pbWdze1xyXG4gICAgICAgIEBpbmNsdWRlIG0udGFibGV0e1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBtLmdyaWRTaW0oMilcclxuICAgICAgICB9XHJcbiAgICAgICAgQGluY2x1ZGUgbS5lc2NyaXRvcmlve1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBtLmdyaWRTaW0oMylcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWltZ3tcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGhlaWdodDogNTByZW07XHJcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogM3JlbTtcclxuICAgIH1cclxufVxyXG4ubW9kYWx7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGdhcDogNXJlbTtcclxuICAgIGluc2V0OiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjcpO1xyXG5cclxuICAgIC8vQW5pbWFjacOzbiBhbCBoYWNlciBjbGljayBzb2JyZSBsYSBpbWcuIFxyXG4gICAgYW5pbWF0aW9uOiBmYWRlSW4gZWFzZS1pbiAuN3M7XHJcbiAgICBcclxuICAgICYtaW1ne1xyXG4gICAgICAgIHdpZHRoOiA4MHJlbTtcclxuICAgICAgICBoZWlnaHQ6IDgwcmVtO1xyXG4gICAgICAgIG1heC13aWR0aDogNzB2dztcclxuICAgICAgICBtYXgtaGVpZ2h0OiA3MHZoO1xyXG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgfVxyXG4gICAgJi1mYWRlT3V0e1xyXG4gICAgICAgIGFuaW1hdGlvbjogZmFkZU91dCBlYXNlLWluIC43cztcclxuICAgIH1cclxufVxyXG4uYnRuLWNlcnJhcntcclxuICAgIHdpZHRoOiA1cmVtO1xyXG4gICAgaGVpZ2h0OiA1cmVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG5cclxufVxyXG5cclxuQGtleWZyYW1lcyBmYWRlSW57XHJcbiAgICAwJXtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgfVxyXG4gICAgMTAwJXtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG59XHJcbkBrZXlmcmFtZXMgZmFkZU91dHtcclxuICAgIDAle1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcbiAgICAxMDAle1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICB9XHJcbn0iLCJAdXNlIFwiLi4vYmFzZS92YXJpYWJsZXNcIiBhcyB2OyBcclxuQHVzZSBcIi4uL2Jhc2UvbWl4aW5zXCIgYXMgbTsgXHJcblxyXG4uY29udGVuZWRvci10aWNrZXRze1xyXG4gICAgaDN7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIH1cclxufVxyXG4udGlja2V0c3tcclxuICAgIEBpbmNsdWRlIG0uY29udGVuZWRvcjtcclxuICAgIEBpbmNsdWRlIG0udGFibGV0e1xyXG4gICAgICAgIEBpbmNsdWRlIG0uZ3JpZFNpbSgyKVxyXG4gICAgfVxyXG59XHJcbi50aWNrZXR7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2LiRjb2xvci00O1xyXG4gICAgcGFkZGluZzogMnJlbSAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcclxuICAgICYtbm9tYnJle1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICBmb250LXNpemU6IDNyZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDkwMDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcclxuICAgIH0gIFxyXG4gICAgJi1oZWFkZXIsXHJcbiAgICAmLWZvb3RlcntcclxuICAgICAgICBwYWRkaW5nOiAuNXJlbTtcclxuICAgICAgICBwe1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIG1hcmdpbjowO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICYtaGVhZGVye1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHYuJGNvbG9yLTI7XHJcbiAgICAgICAgcHtcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjJyZW07XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFyZW0gMDtcclxuICAgICAgICAgICAgY29sb3I6IHYuJGJsYW5jbztcclxuICAgICAgICB9XHJcbiAgICB9IFxyXG4gICAgJi1ib2R5e1xyXG4gICAgICAgIHVse1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBtLnJlc2V0LWxpc3Q7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxpe1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAycmVtIDMuNXJlbTtcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHYuJGNvbG9yLTM7XHJcbiAgICAgICAgICAgICY6bGFzdC1jaGlsZHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDJyZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWZvb3RlcntcclxuICAgICAgICBwe1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHYuJGNvbG9yLTI7XHJcbiAgICAgICAgICAgIGNvbG9yOiB2LiRibGFuY287XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFyZW0gMDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMXJlbTtcclxuICAgICAgICAgICAgd2lkdGg6IDQwJTtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2LiRjb2xvci0zOyBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0gICBcclxuICAgIEBpbmNsdWRlIG0udGFibGV0e1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAmLWZvb3RlcntcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogYXV0bztcclxuICAgICAgICB9XHJcbiAgICB9ICBcclxufSIsIkB1c2UgXCIuLi9iYXNlL3ZhcmlhYmxlc1wiIGFzIHY7IFxyXG5cclxuLmZvb3RlcntcclxuICAgIG1hcmdpbi10b3A6IDEwcmVtO1xyXG4gICAgcGFkZGluZzogMnJlbSAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdi4kY29sb3ItNDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiB2LiRibGFuY287XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG59Il19 */
